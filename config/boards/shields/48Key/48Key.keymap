/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define FUNCTION 1
#define NUMBER 2
#define SETTINGS 3
#define FN 4

/ {

keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp TAB       &kp Q      &kp W         &kp E             &kp R                &kp T       &kp Y             &kp  U               &kp I                &kp O        &kp P     &kp NUBS
                &kp LCTRL     &kp A      &kp S         &kp D             &kp F                &kp G       &kp H             &kp  J               &kp K                &kp L        &kp SEMI  &kp SQT
                &kp LSHIFT    &kp Z      &kp X         &kp C             &kp V                &kp B       &kp N             &kp  M               &kp COMMA            &kp DOT      &kp FSLH  &kp RSHIFT
                &kp LWIN      &kp LALT   &lt FN MINUS  &lt NUMBER ENTER  &lt FUNCTION SPACE   &kp BSPC    &lt NUMBER BSPC   &lt FUNCTION SPACE   &lt SETTINGS ENTER   &lt FN EQUAL  &kp RALT  &kp K_APP
            >;
         };
        function_layer {
            bindings = <
                &kp ESC      &none     &kp HOME    &kp UP        &kp END    &kp PSCRN   &kp C_VOL_UP   &kp PG_UP   &kp UP               &kp PG_DN    &kp C_BRI_UP  &kp DEL
                &kp LCTRL    &kp CAPS  &kp LEFT    &kp DOWN      &kp RIGHT  &kp LC(F)   &kp C_VOL_DN   &kp LEFT    &kp DOWN             &kp RIGHT    &kp C_BRI_DN  &kp LG(L)
                &kp LSHIFT   &none     &kp LC(X)   &kp LC(C)     &kp LC(V)  &kp INS     &kp C_MUTE     &none       &none                &none        &none         &kp RSHIFT
                &kp LWIN     &kp LALT  &lt FN LBKT &trans        &trans     &trans      &trans         &trans      &lt SETTINGS ENTER   &lt FN RBKT  &kp RALT      &kp K_APP
            >;
        };
        number_layer {
            bindings = <
                &kp GRAVE  &kp EXCL   &kp AT     &kp HASH    &kp DOLLAR   &kp PERCENT  &kp CARET  &kp AMPS   &kp ASTERISK    &kp LPAR   &kp RPAR   &kp DEL
                &kp LCTRL  &kp N1     &kp N2     &kp N3      &kp N4       &kp N5       &kp N6     &kp N7     &kp N8          &kp N9     &kp N0     &kp ENTER
                &kp LSHIFT &none      &none      &none       &none        &none        &none      &none      &kp COMMA       &kp DOT    &kp FSLH   &kp RSHIFT
                &kp LWIN   &kp LALT   &kp MINUS  &trans      &trans       &trans       &trans     &trans     &trans          &kp EQUAL   &kp RALT   &kp K_APP
            >;
         };
        settings_layer {
            bindings = <
                &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &none   &none   &none   &none   &none  &none  &bt BT_CLR
                &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &none   &none   &none   &none   &none  &none  &out OUT_TOG
                &none          &none          &none          &none          &none          &none   &none   &none   &none   &none  &none  &none
                &bootloader    &none          &none          &trans         &trans         &trans  &trans  &trans  &trans  &none  &none  &bt BT_CLR_ALL
            >;
         };
        fn_layer {
            bindings = <
                &kp F1     &kp F2     &kp F3     &kp F4   &kp F5   &kp F6    &kp F7   &kp F8   &kp F9   &kp F10  &kp F11   &kp F12
                &kp LCTRL  &kp F13    &kp F14    &kp F15  &kp F16  &kp F17   &kp F18  &kp F19  &kp F20  &kp F21  &kp F22   &kp ENTER
                &kp LSHIFT &none      &none      &none    &none    &none     &none    &none    &none    &none    &none     &kp RSHIFT
                &kp LWIN   &kp LALT   &kp LBKT   &trans   &trans   &trans    &trans   &trans   &trans   &kp RBKT &kp RALT  &kp K_APP
            >;
         };
    };
};
