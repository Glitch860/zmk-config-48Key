/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

//Mods
/{
behaviors {

    clt: func_layer_tap { 
    compatible = "zmk,behavior-hold-tap"; 
    label = "CTRL_LAYER_TAP"; 
    #binding-cells = <2>; 
    flavor = "tap-preferred"; 
    tapping-term-ms = <200>; 
    quick-tap-ms = <125>; 
    global-quick-tap; 
    bindings = <&mo>, <&kp>; 
    };
    
    nlt: num_layer_tap { 
    compatible = "zmk,behavior-hold-tap"; 
    label = "NUM_LAYER_TAP"; 
    #binding-cells = <2>; 
    flavor = "tap-preferred"; 
    tapping-term-ms = <200>; 
    quick-tap-ms = <125>; 
    global-quick-tap; 
    bindings = <&mo>, <&kp>; 
    };

    blt: settings_layer_tap { 
    compatible = "zmk,behavior-hold-tap"; 
    label = "BT_LAYER_TAP"; 
    #binding-cells = <2>; 
    flavor = "tap-preferred"; 
    tapping-term-ms = <200>; 
    quick-tap-ms = <125>; 
    global-quick-tap; 
    bindings = <&mo>, <&kp>; 
    };
  };
};
#define DEFAULT 0
#define FUNCTION 1
#define NUMBER 2
#define SETTINGS 3
#define NUMPAD 4

{
/ keymap {
        compatible = "zmk,keymap";

        default_layer {
//--------------------------------------------------------------------------------------------------------
// |  TAB  |  Q  |  W  | E |  R  |   T   |                       |   Y   |  U  | I |  O  |  P  |  \    |
// |  CTL  |  A  |  S  | D |  F  |   G   |                       |   H   |  J  | K |  L  |  ;  |   '   |
// | SHIFT |  Z  |  X  | C |  V  |   B   |                       |   N   |  M  | , |  .  |  /  | SHIFT |
//         | WIN | ALT | - | ENT | SPACE | BKSP |         | BKSP | SPACE | ENT | = | ALT | APP |
            bindings = <
                &kp TAB      &kp Q      &kp W      &kp E      &kp R      &kp T      &kp Y      &kp  U      &kp I      &kp O      &kp P      &kp NUBS
                &kp LCTRL      &kp A      &kp S      &kp D      &kp F      &kp G      &kp H      &kp  J      &kp K      &kp L      &kp SEMI      &kp SQT
                &kp LSHIFT      &kp Z      &kp X      &kp C      &kp V      &kp B      &kp N      &kp  M      &kp COMMA      &kp DOT      &kp FSLH      &kp RSHIFT
                &kp LWIN      &kp LALT      &kp MINUS      &blt SETTINGS ENTER      &clt FUNCTION SPACE      &nlt NUMBER BSPC      &nlt NUMBER BSPC      &clt FUNCTION SPACE      &blt SETTINGS ENTER      &kp PLUS      &kp RALT      &kp K_APP
            >;
         };
        function_layer {
//------------------------------------------------------------------------------------------------------------------------------
// |  ESC  |      | HOME | UP |  END  | PSCRN |                           | VOL_UP | PG_UP |   UP   | PG_DN  |   BR+  |  DEL  |
// | ctrl  | CAPS | LEFT | DN | RIGHT | FIND  |                           | VOL_DN |  LEFT |  DOWN  | RIGHT  |   BR-  |       |
// | SHIFT |      |  X   | C  |  V    |       |                           |  MUTE  |       |        |        |        | SHIFT |
//         | WIN  | ALT  | [  |  ENT  | SPACE | BKSP |             | BKSP | SPACE  |  ENT  |    ]   |   ALT  |   APP  |
            bindings = <
                &kp ESC      &none      &kp HOME      &kp UP      &kp END      &kp PSCRN      &kp C_VOL_UP      &kp  PG_UP      &kp UP      &kp PG_DN      &kp C_BRI_UP      &kp DEL
                &kp LCTRL      &kp CAP      &kp LEFT      &kp DOWN      &kp RIGHT      &kp K_FIND      &kp C_VOL_DN      &kp  LEFT      &kp DOWN      &kp RIGHT      &kp C_BRI_DN      &trans
                &kp LSHIFT      &none      &trans      &trans      &trans      &none      &kp C_MUTE      &none      &none     &none       &none      &kp RSHIFT
                &kp LWIN      &kp LALT      &kp LBKT      &blt SETTINGS ENTER      &kp SPACE      &nlt NUMBER BSPC      &nlt NUMBER BSPC      &kp  SPACE      &blt SETTINGS ENTER      &kp RBKT      &kp RALT      &kp K_APP
            >;
        };
        number_layer {
//-----------------------------------------------------------------------------------------------------------
// |  `    |  !  |  @  | #  | $   |    %  |                        |   ^   | &   | *  |  (  |  )  |  DEL  |
// | ctrl  |  1  |  2  | 3  | 4   |    5  |                        |   6   | 7   | 8  |  9  |  0  | SHIFT |
// | F1    |  F2 |  F3 | F4 | F5  |   F6  |                        |   F7  | F8  | F9 | F10 | F11 |  F12  |
//         | WIN | ALT | -  | ENT | SPACE | BKSP |          | BKSP | SPACE | ENT | +  | ALT | APP |
            bindings = <
                &kp GRAVE      &kp EXCL      &kp AT      &kp HASH      &kp DOLLAR      &kp PERCENT      &kp CARET      &kp AMPS      &kp ASTERISK      &kp LPAR      &kp RPAR      &kp DEL
                &kp LCTRL      &kp N1      &kp N2      &kp N3      &kp N4      &kp N5      &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &trans
                &kp F1      &kp F2      &kp F3      &kp F4      &kp F5      &KP F6      &kp F7      &kp F8      &kp F9      &kp F10      &kp F11     &kp F12
                &kp LWIN      &kp LALT      &kp MINUS      &blt SETTINGS ENTER      &clt FUNCTION SPACE      &kp BSPC      &kp BSPC      &clt FUNCTION  SPACE      &blt SETTINGS ENTER      &kp PLUS      &kp RALT      &kp K_APP
            >;
         };
        settings_layer {
//---------------------------------------------------------------------------------------------------------------------------
// | BT SL 0 | BT SL 1  |  BT SL 2  | BT SL 3 | BT SL 4  |     |                     |     |  |  |  |            | BT_CLR |
// | BT DC 0 | BT DC 1  |  BT DC 2  | BT DC 3 | BT DC 4  |     |                     |     |  |  |  |            |        |
// |         |          |           |         |          | to4 |                     | to4 |  |  |  |            |        |
//           | BootLoad |           |         |          |     | BT PRV |   | BT NXT |     |  |  |  | BT_CLR_ALL |
            bindings = <
                &bt BT_SEL 0      &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3      &bt BT_SEL 4     &none      &none      &none     &none      &none      &none      &bt BT_CLR
                &bt BT_DISC 0      &bt BT_DISC 1      &bt BT_DISC 2      &bt BT_DISC 3      &bt BT_DISC 4      &none      &none      &none      &none      &none      &none      &none
                &none      &none      &none      &none      &none      &to 4      &to 4      &none      &none      &none      &none      &none
                &bootloader      &none      &none      &none      &none      &bt BT_PRV      &bt BT_NXT      &none      &none      &none      &none      &bt BT_CLR_ALL
            >;
         };
        numpad_layer {
//---------------------------------------------------------------------------------------------------------------------
// | to 0 | Num+ |      | Num7 | Num8 |  Num9 |                       |  Num7 | Num8 | Num9 |      | Num+ | NumLck |
// |      | Num- |      | Num4 | Num5 |  Num6 |                       |  Num4 | Num5 | Num6 |      | Num- | NumEnt |
// |      | Num* |      | Num1 | Num2 |  Num3 |                       |  Num1 | Num2 | Num3 |      | Num* |        |
//        | Num/ | Num. | Num0 | Ent  | space | backspace| |backspace | space | Ent  | Num0 | Num. | Num/ |
            bindings = <
                &to 0      &kp KP_PLUS      &none      &kp KP_N7      &kp KP_N8      &kp KP_N9      &kp KP_N7      &kp KP_N8      &kp KP_N9      &none      &kp KP_PLUS      &kp KP_NUM
                &none      &kp KP_MINUS      &none      &kp KP_N4      &kp KP_N5      &kp KP_N6      &kp KP_N4      &kp KP_N5      &kp KP_N6      &none      &kp KP_MINUS      &kp KP_ENTER
                &none      &kp KP_MULTIPLY      &none      &kp KP_N1      &kp KP_N2      &kp KP_N3      &kp KP_N1      &kp KP_N2      &kp KP_N3      &none      &kp KP_MULTIPLY     &none
                &kp KP_DIVIDE      &kp KP_DOT      &kp KP_N0      &kp ENTER      &clt FUNCTION SPACE      &kp BSPC      &kp BSPC      &clt FUNCTION SPACE      &kp ENTER      &kp KP_N0      &kp KP_DOT      &kp KP_DIVIDE
            >;
         };
    };
};
